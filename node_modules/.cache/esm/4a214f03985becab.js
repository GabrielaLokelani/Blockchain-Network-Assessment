
'use strict';;let BlockChain,blockchainNodes,connectToPeers,initP2PServer,initialPeers,initHttpServer,initFaucetServer;_985‍.x([["MIEWCOIN_BLOCKCHAIN",()=>MIEWCOIN_BLOCKCHAIN]]);_985‍.w("./src/chain",[["default",["BlockChain"],function(v){BlockChain=v}],["blockchainNodes",["blockchainNodes"],function(v){blockchainNodes=v}]]);_985‍.w("./src/node",[["connectToPeers",["connectToPeers"],function(v){connectToPeers=v}],["initP2PServer",["initP2PServer"],function(v){initP2PServer=v}],["initialPeers",["initialPeers"],function(v){initialPeers=v}]]);_985‍.w("./src/server",[["initHttpServer",["initHttpServer"],function(v){initHttpServer=v}]]);_985‍.w("./src/faucet",[["initFaucetServer",["initFaucetServer"],function(v){initFaucetServer=v}]]);
// IMPORT RELEVANT LIBRARIES
const CryptoJS = require('crypto-js');
const express = require('express');
const WebSocket = require('ws');
const bodyParser = require('body-parser');






       const MIEWCOIN_BLOCKCHAIN = new (_985‍.a("BlockChain",BlockChain))();;_985‍.j(["MIEWCOIN_BLOCKCHAIN"]);
_985‍.a("initHttpServer",initHttpServer)();
_985‍.a("connectToPeers",connectToPeers)(_985‍.a("initialPeers",initialPeers));
_985‍.a("initP2PServer",initP2PServer)();
_985‍.a("initFaucetServer",initFaucetServer)();
_985‍.a("blockchainNodes",blockchainNodes)()


